'use strict';

import { IContextManager } from '../messaging/IContextManager';
import { IResourceProvider } from './IResourceProvider';
import { RequestHelper } from '../inspectors/util/HttpHelper';

export class ResourceProviderInProc implements IResourceProvider {
    public constructor(private contextManager: IContextManager, private server) {
    }

    public getResourceDefinitions(callback: (resources: { [key: string]: string }) => void): void {
        const context = this.contextManager.currentContext();

        if (context) {
            const protocol = RequestHelper.protocol(context.req);
            const host = RequestHelper.host(context.req);
            const baseUri = protocol + '://' + host + '/glimpse';

            const templates = this.server.providers.resourceManager.getUriTemplates(baseUri);

            callback(templates);
        }
        else {
            callback(undefined);
        }
    }
}
