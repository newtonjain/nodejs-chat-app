'use strict';

import Tracing from '../Tracing';
import { ProxyBase } from './ProxyBase';

export class MongoDBCoreProxy extends ProxyBase {
    /**
     * event names for mongodb-core
     */
    public static EVENT_INVOKE_PRE_MONGODB_CORE_SERVER_COMMAND = 'invoke|pre|module:/mongodb-core.server#command';
    public static EVENT_INVOKE_PRE_MONGODB_CORE_CURSOR_NEXT = 'invoke|pre|module:/mongodb-core.cursor#next';

    public getModuleNames() {
      return ['mongodb-core'];
    };

    public get forceLoadModule(): boolean {
        return false;
    }

    public init(mongodbCoreModule, resolvedModulePath) {
        /**
         * override of mongodb-core Server.prototype.command
         */
        const functionServerCommand = mongodbCoreModule.Server.prototype.command;

        mongodbCoreModule.Server.prototype.command = function commandProxy() {
            if (Tracing.isEventEnabled(MongoDBCoreProxy.EVENT_INVOKE_PRE_MONGODB_CORE_SERVER_COMMAND)) {
                let data = {
                    originalThis: this,
                    originalArgs: arguments
                };

                Tracing.publish(MongoDBCoreProxy.EVENT_INVOKE_PRE_MONGODB_CORE_SERVER_COMMAND, data);

                functionServerCommand.apply(this, data.originalArgs);
            } else {
                functionServerCommand.apply(this, arguments);
            }
        };

        /**
         * override of mongodb-core Cursor.prototype.next
         */
        const functionCursorNext = mongodbCoreModule.Cursor.prototype.next;

        mongodbCoreModule.Cursor.prototype.next = function nextProxy() {
            if (Tracing.isEventEnabled(MongoDBCoreProxy.EVENT_INVOKE_PRE_MONGODB_CORE_CURSOR_NEXT)) {
                let data = {
                    originalThis: this,
                    originalArgs: arguments
                };

                Tracing.publish(MongoDBCoreProxy.EVENT_INVOKE_PRE_MONGODB_CORE_CURSOR_NEXT, data);

                functionCursorNext.apply(this, data.originalArgs);
            } else {
                functionServerCommand.apply(this, arguments);
            }
        };

        return mongodbCoreModule;
    }
}
