'use strict';
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var ProxyBase_1 = require('./ProxyBase');
var HttpHelper_1 = require('../../inspectors/util/HttpHelper');
var GuidHelper_1 = require('../../util/GuidHelper');
var REQUEST_ID_COOKIE = '.Glimpse.RequestId';
var RequestIdInjector = (function (_super) {
    __extends(RequestIdInjector, _super);
    function RequestIdInjector() {
        _super.apply(this, arguments);
    }
    RequestIdInjector.prototype.getModuleNames = function () {
        return ['http', 'https'];
    };
    RequestIdInjector.prototype.init = function (httpModule) {
        var oldCreateServer = httpModule.createServer;
        httpModule.createServer = function createServer() {
            var args = [];
            for (var _i = 0; _i < arguments.length; _i++) {
                args[_i - 0] = arguments[_i];
            }
            var server = oldCreateServer.call.apply(oldCreateServer, [this].concat(args));
            server.on('request', function (req, res) {
                var requestCookies = HttpHelper_1.RequestHelper.parseCookies(req);
                var requestId = requestCookies ? requestCookies[REQUEST_ID_COOKIE] : undefined;
                if (!requestId && !res.headersSent) {
                    HttpHelper_1.ResponseHelper.setCookie(res, REQUEST_ID_COOKIE, GuidHelper_1.GuidHelper.newGuid(false));
                }
            });
            return server;
        };
    };
    return RequestIdInjector;
}(ProxyBase_1.ProxyBase));
exports.RequestIdInjector = RequestIdInjector;

//# sourceMappingURL=../../../maps/tracing/proxies/RequestIdInjector.js.map
