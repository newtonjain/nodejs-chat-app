'use strict';
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Tracing_1 = require('../Tracing');
var ProxyBase_1 = require('./ProxyBase');
var MongoDBCoreProxy = (function (_super) {
    __extends(MongoDBCoreProxy, _super);
    function MongoDBCoreProxy() {
        _super.apply(this, arguments);
    }
    MongoDBCoreProxy.prototype.getModuleNames = function () {
        return ['mongodb-core'];
    };
    ;
    Object.defineProperty(MongoDBCoreProxy.prototype, "forceLoadModule", {
        get: function () {
            return false;
        },
        enumerable: true,
        configurable: true
    });
    MongoDBCoreProxy.prototype.init = function (mongodbCoreModule, resolvedModulePath) {
        /**
         * override of mongodb-core Server.prototype.command
         */
        var functionServerCommand = mongodbCoreModule.Server.prototype.command;
        mongodbCoreModule.Server.prototype.command = function commandProxy() {
            if (Tracing_1.default.isEventEnabled(MongoDBCoreProxy.EVENT_INVOKE_PRE_MONGODB_CORE_SERVER_COMMAND)) {
                var data = {
                    originalThis: this,
                    originalArgs: arguments
                };
                Tracing_1.default.publish(MongoDBCoreProxy.EVENT_INVOKE_PRE_MONGODB_CORE_SERVER_COMMAND, data);
                functionServerCommand.apply(this, data.originalArgs);
            }
            else {
                functionServerCommand.apply(this, arguments);
            }
        };
        /**
         * override of mongodb-core Cursor.prototype.next
         */
        var functionCursorNext = mongodbCoreModule.Cursor.prototype.next;
        mongodbCoreModule.Cursor.prototype.next = function nextProxy() {
            if (Tracing_1.default.isEventEnabled(MongoDBCoreProxy.EVENT_INVOKE_PRE_MONGODB_CORE_CURSOR_NEXT)) {
                var data = {
                    originalThis: this,
                    originalArgs: arguments
                };
                Tracing_1.default.publish(MongoDBCoreProxy.EVENT_INVOKE_PRE_MONGODB_CORE_CURSOR_NEXT, data);
                functionCursorNext.apply(this, data.originalArgs);
            }
            else {
                functionServerCommand.apply(this, arguments);
            }
        };
        return mongodbCoreModule;
    };
    /**
     * event names for mongodb-core
     */
    MongoDBCoreProxy.EVENT_INVOKE_PRE_MONGODB_CORE_SERVER_COMMAND = 'invoke|pre|module:/mongodb-core.server#command';
    MongoDBCoreProxy.EVENT_INVOKE_PRE_MONGODB_CORE_CURSOR_NEXT = 'invoke|pre|module:/mongodb-core.cursor#next';
    return MongoDBCoreProxy;
}(ProxyBase_1.ProxyBase));
exports.MongoDBCoreProxy = MongoDBCoreProxy;

//# sourceMappingURL=../../../maps/tracing/proxies/MongoDBCoreProxy.js.map
