'use strict';
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var ProxyBase_1 = require('./ProxyBase');
var MiddlewareWrapper_1 = require('./util/MiddlewareWrapper');
var _ = require('lodash');
var MorganProxy = (function (_super) {
    __extends(MorganProxy, _super);
    function MorganProxy() {
        _super.apply(this, arguments);
    }
    Object.defineProperty(MorganProxy.prototype, "forceLoadModule", {
        get: function () { return false; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MorganProxy.prototype, "moduleName", {
        get: function () { return 'morgan'; },
        enumerable: true,
        configurable: true
    });
    ;
    MorganProxy.prototype.init = function (agent, module) {
        var newModule = function newModule() {
            var logger = module.apply(this, arguments);
            MiddlewareWrapper_1.MiddlewareWrapper.attachMetadata(logger, 'logger', 'Morgan Logger', 'morgan');
            return logger;
        };
        // NOTE: Accessing the 'default' property of the module will result in a 'deprecated default format' warning.
        //       We need to keep the property on the new module for compatibility purposes so the warning, while annoying, must be ignored.
        _.assign(newModule, module);
        return newModule;
    };
    return MorganProxy;
}(ProxyBase_1.ProxyBase));
exports.MorganProxy = MorganProxy;

//# sourceMappingURL=../../maps/inspectors/MorganProxy.js.map
